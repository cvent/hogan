name: Publish

on:
  release:
    types: [created]

env:
  RUST_LOG: info
  RUST_BACKTRACE: 1

jobs:
  publish_github:
    name: Publish to GitHub Releases
    permissions:
      contents: write
      packages: write
      repository-projects: read
      deployments: write
      actions: read
      issues: read
      statuses: write
    strategy:
      matrix:
        target:
          # Rustc's Tier 1 platforms
          # https://doc.rust-lang.org/nightly/rustc/platform-support.html#tier-1-with-host-tools
          # Windows gnu is not currently working
          # - i686-pc-windows-gnu
          - i686-pc-windows-msvc
          - i686-unknown-linux-gnu
          - x86_64-apple-darwin
          # Windows gnu is not currently working
          # - x86_64-pc-windows-gnu
          - x86_64-pc-windows-msvc
          - x86_64-unknown-linux-gnu
          # Select tier 2 platforms
          # https://doc.rust-lang.org/nightly/rustc/platform-support.html#tier-2-with-host-tools
          - aarch64-apple-darwin
          # Windows ARM is not currently working
          # - aarch64-pc-windows-msvc
          - x86_64-unknown-linux-musl
        # Testability according to cross
        # https://github.com/rust-embedded/cross#supported-targets
        include:
          # - target: i686-pc-windows-gnu
          #   os: windows-latest
          - target: i686-pc-windows-msvc
            os: windows-latest
          - target: i686-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          # - target: x86_64-pc-windows-gnu
          #   os: windows-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          # - target: aarch64-pc-windows-msvc
          #   os: windows-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.2.1
        with:
          key: ${{ matrix.target }}
      - name: Archive Release
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: hogan
          target: ${{ matrix.target }}
        env:
          # (required) GitHub token for creating GitHub Releases.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
